{".source.html":{"<x-widget>...":{"prefix":"wdg","body":"<x-widget name=\"$1\">$0</$1>}"}},".source.js":{"Trace var in console":{"prefix":"tr","body":"console.info(\"$1=\", $1)"},"-- -> /******************":{"prefix":"--","body":"/**\n* @module `(file-name-sans-extension (buffer-name))`\n*\n* @description\n* $1\n*\n* @example\n* var mod = require('`(file-name-sans-extension (buffer-name))`');\n*/\n$0"},"arr -> Array.isArray($0)":{"prefix":"arr","body":"Array.isArray($0)"},"var $1 = $_parseArg(arg_$1);":{"prefix":"arg","body":"var ${1:args} = Array.prototype.slice.call( arguments );$0"},"New Toloframework component":{"prefix":"com","body":"/**\n* Component ${1:x-my-component}\n*/\n\nexports.tags = [\"$1\"];\nexports.priority = 0;\n\n/**\n* Compile a node of the HTML tree.\n*/\nexports.compile = function(root, libs) {\n$0\n};"},"typ -> typeof {} === '{}'":{"prefix":"typ","body":"typeof $1 ${2:=}== '${3:}'$0"},"console.error();":{"prefix":"err","body":"console.error(${1:err});$0"},"describe('should...', function() {...})":{"prefix":"des","body":"describe('${1:should }$2', function($3) {\n$0\n});"},"ext":{"prefix":"ext","body":"// Inheritance from ${1:Widget}\n`(mapconcat 'identity (mapcar 'capitalize (split-string (car (last (split-string (file-name-sans-extension (buffer-name)) \"\\\\.\"))) \"-\")) \"\")`.prototype = Object.create(${1:Widget}.prototype);\n`(mapconcat 'identity (mapcar 'capitalize (split-string (car (last (split-string (file-name-sans-extension (buffer-name)) \"\\\\.\"))) \"-\")) \"\")`.prototype.constructor = `(mapconcat 'identity (mapcar 'capitalize (split-string (car (last (split-string (file-name-sans-extension (buffer-name)) \"\\\\.\"))) \"-\")) \"\")`;"},"dom: New class.":{"prefix":"dom","body":"\"use strict\";\n\nvar $ = require(\"dom\");\nvar DB = require(\"tfw.data-binding\");\n\n/**\n * @class $1\n *\n * @param {boolean} opts.visible - Set the visiblity of the component.\n *\n * @example\n * var $1 = require(\"$1\");\n * var instance = new $1({ visible: false });\n */\nvar $1 = function(opts) {\n    var elem = $.elem( this, 'div' );\n    $0\n    DB.propRemoveClass( this, 'visible', 'hide' );\n\n    opts = DB.extend({\n         visible: true\n    }, opts, this);\n};\n\n\nmodule.exports = $1;"},"fora -> for (i=0 ; i<arguments.length ; ...":{"prefix":"fora","body":"Array.slice.call(arguments).forEach(function(arg, idx) {\n$0\n});"},"export":{"prefix":"export","body":"/**\n* ${5:$1}\n* @param {${3:string}} $2 - $4.\n*/\nmodule.exports.$1 = function($2) {\n$0\n};\n"},"forap -> var args = []; for (i=0 ; i<arguments.length ; ...":{"prefix":"forap","body":"var ${1:i}, ${2:args} = [];\nfor ($1 = ${3:0} ; $1 < arguments.length ; $1++) $2.push(arguments[$1]);$0"},"fore -> Array.forEach(...)":{"prefix":"fore","body":"$1.forEach(function (${2:itm, idx, arr}) {\n$0\n});"},"fori -> for (i=0 ; i<toto.length ; i++) ...":{"prefix":"fori","body":"for( ${1:i} = 0 ; $1 < $2.length ; $1++ ) {\nvar ${3:item} = $2[$1];$0\n}"},"fork --> for( key in toto ) ...":{"prefix":"fork","body":"for( ${1:key} in $2 ) {\n${3:val} = $2[$1];$0\n}"},"function( ... ) {}":{"prefix":"fun","body":"function$1($2) {\n$0\n}"},"defineProperty read only":{"prefix":"get","body":"${3:Object}.defineProperty( this, '${1:element}', {\nvalue: ${2:$.div()},\nwritable: false, configurable: false, enumerable: true\n});$0"},"defineProperty":{"prefix":"getset","body":"${2:Object}.defineProperty( `(mapconcat 'identity (mapcar 'capitalize (split-string (car (last (split-string (file-name-sans-extension (buffer-name)) \"\\\\.\"))) \"-\")) \"\")`.prototype, '${1:value}', {\nget: function() { return this._$1; },\nset: function(v) { this._$1 = v; },\nconfigurable: true, enumerable: true\n});$0"},"if(  ) {}":{"prefix":"if","body":"if( $1 ) {\n$0\n}"},"if( typeof {} === '{}' )":{"prefix":"iftyp","body":"if( typeof $1 ${2:=}== '${3:}' ) $0"},"console.log();":{"prefix":"log","body":"console.log($0);"},"it('should...', function() {...})":{"prefix":"it","body":"it('$1', function($2) {\n$0\n});"},"mod: Module for require().":{"prefix":"mod","body":"/**\n* @example\n* var `(mapconcat 'identity (mapcar 'capitalize (split-string (car (last (split-string (file-name-sans-extension (buffer-name)) \"\\\\.\"))) \"-\")) \"\")` = require(\"`(file-name-sans-extension (buffer-name))`\");\n* var instance = new `(mapconcat 'identity (mapcar 'capitalize (split-string (car (last (split-string (file-name-sans-extension (buffer-name)) \"\\\\.\"))) \"-\")) \"\")`($1);\n* @class `(mapconcat 'identity (mapcar 'capitalize (split-string (car (last (split-string (file-name-sans-extension (buffer-name)) \"\\\\.\"))) \"-\")) \"\")`\n*/\nvar `(mapconcat 'identity (mapcar 'capitalize (split-string (car (last (split-string (file-name-sans-extension (buffer-name)) \"\\\\.\"))) \"-\")) \"\")` = function($1) {\n   $0\n};\n\n\n`(mapconcat 'identity (mapcar 'capitalize (split-string (car (last (split-string (file-name-sans-extension (buffer-name)) \"\\\\.\"))) \"-\")) \"\")`.create = function($1) {\nreturn new `(mapconcat 'identity (mapcar 'capitalize (split-string (car (last (split-string (file-name-sans-extension (buffer-name)) \"\\\\.\"))) \"-\")) \"\")`($1);\n};\nmodule.exports = `(mapconcat 'identity (mapcar 'capitalize (split-string (car (last (split-string (file-name-sans-extension (buffer-name)) \"\\\\.\"))) \"-\")) \"\")`;"},"{\"name\": \"ZANOLLA Jules\", \"days\": \"M\"},":{"prefix":"par","body":"{\"name\": \"$1\", \"days\": \"${2:LMJV}\", \"mail\": \"$3\", \"exclude\": [$4]},$0"},"new Promise(...)":{"prefix":"pro","body":"new Promise(function(resolve, reject) {\n$0\n});"},"Toto.prototype.method = function()":{"prefix":"proto","body":"/**\n* @member ${1:`(mapconcat 'identity (mapcar 'capitalize (split-string (car (last (split-string (file-name-sans-extension (buffer-name)) \"\\\\.\"))) \"-\")) \"\")`}.$2\n* @param $3\n*/\n$1.prototype.$2 = function($3) {\n   $0\n};"},"req":{"prefix":"req","body":"var ${3:${1:$(camelize yas-text)}} = require(\"${1:fs}\")$2;$0"},"Accessor pour un attribut.":{"prefix":"set","body":"        /**\n * Accessor for ${1:name}.\n */\n$1: function(v) {\n    if (v === undefined) return this._$1;\n    this._$1 = v;\n    return this;\n}$0"},"var Button = require('wdg.button')":{"prefix":"reqbtn","body":"var Button = require('wdg.button');$0"},"return new Promise(...)":{"prefix":"retpro","body":"return new Promise(function (resolve, reject) {\n$0\n});"},"var Modal = require('wdg.modal')":{"prefix":"reqmod","body":"var Modal = require('wdg.modal');$0"},"var Text = require('wdg.text')":{"prefix":"reqtxt","body":"var Text = require('wdg.text');$0"},"Tap -> Tap(function(){})":{"prefix":"tap","body":"Tap(\nfunction() {\n  $0\n}\n)"},"try {} catch(e) {}":{"prefix":"try","body":"try {\n$0\n}\ncatch (e) {\nconsole.error(\"[${1:`(buffer-name)`}:$2]\", e);\nthrow(Error(\"[${1:`(buffer-name)`}:$2]\n\" + e));\n}"},"if( toto === undefined ) toto = \"blabla\";":{"prefix":"undef","body":"if( typeof $1 === '' ) $1 = $2;\n$0"},"use":{"prefix":"use","body":"\"use strict\";\n$0"},"_('intl')":{"prefix":"_","body":"_('$1'$2)$0"}}}